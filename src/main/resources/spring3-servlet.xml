<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation=" 
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
	default-autowire="byName">

	<!-- 扫描所有的controller -->
	<context:component-scan base-package="com.yecoo.web" />

	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/themes/**" location="/themes/" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<mvc:annotation-driven/>
		
	<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->		
	<mvc:default-servlet-handler/>

	<!-- InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 启用基于注解的处理器映射，添加拦截器，类级别的处理器映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<bean class="com.yecoo.util.MyHandlerInterceptor" />
			</list>
		</property>
	</bean>

	<!-- 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射，
	 有人说该bean要放在context:component-scan前面，要不然不起作用，但我试的放后面也可以啊。 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<property name="webBindingInitializer">
			<bean class="com.yecoo.util.MyWebBinding" />
		</property>
	</bean>
	<!-- SHIRO配置  开启Shiro注解的Spring配置方式的beans。在lifecycleBeanPostProcessor之后运行 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 全局异常配置 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">/pub/403</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">/pub/403</prop>
				<prop key="java.lang.Exception">/pub/500</prop>
				<prop key="java.lang.Throwable">/pub/500</prop>
			</props>
		</property>
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:maxUploadSize="51200000" p:maxInMemorySize="512" />
</beans> 